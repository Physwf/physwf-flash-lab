package com.physwf.components.rpc.msg
{
	import flash.utils.Dictionary;

	public class MessageManager
	{
		private var mMsgDic:Dictionary;
		
		public static var instance:MessageManager = new MessageManager();
		
		public function MessageManager()
		{
		}
		
		public function initialize():void
		{
			mMsgDic = new Dictionary();
		}
		
		public function registerMessage():void
		{
			regMsg(0x0001,MSG_RES_LOGIN_VERIFY_USER_0x0001);
			regMsg(0x9000,MSG_RES_ROLE_CREATE_ROLE_0x9000);
			regMsg(0x9001,MSG_RES_ROLE_EXIST_ROLE_0x9001);
			regMsg(0x6000,MSG_RES_SWITCH_WORLD_NOTIFY_USER_NUM_0x6000);
			regMsg(0x6001,MSG_RES_SWITCH_USER_VERIFY_DONE_0x6001);
			regMsg(0x6002,MSG_RES_SWITCH_USER_LEAVE_GATEWAY_0x6002);
			regMsg(0x6003,MSG_RES_SWITCH_USER_INTO_WORLD_0x6003);
			regMsg(0x6004,MSG_RES_SWITCH_GET_WORLD_LIST_0x6004);
			regMsg(0x6005,MSG_RES_SWITCH_USER_LEAVE_WORLD_0x6005);
			regMsg(0x6100,MSG_RES_WORLD_REQ_FRIEND_SIMPLE_INFO_0x6100);
			regMsg(0x6101,MSG_RES_WORLD_SEND_FRIEND_SIMPLE_INFO_0x6101);
			regMsg(0x6102,MSG_RES_WORLD_REQ_ZHUFU_0x6102);
			regMsg(0x6103,MSG_RES_WORLD_NOTIFY_RECV_ZHUFU_0x6103);
			regMsg(0x1000,MSG_RES_WORLD_KICK_USER_0x1000);
			regMsg(0x1001,MSG_RES_WORLD_LEAVE_USER_0x1001);
			regMsg(0x1002,MSG_RES_WORLD_USER_ENTER_0x1002);
			regMsg(0x1003,MSG_RES_WORLD_ENTER_MAP_0x1003);
			regMsg(0x1004,MSG_RES_WORLD_USER_MOVE_0x1004);
			regMsg(0x1005,MSG_RES_WORLD_LEAVE_MAP_NOTIFY_0x1005);
			regMsg(0x1006,MSG_RES_WORLD_ENTER_MAP_NOTIFY_0x1006);
			regMsg(0x1007,MSG_RES_WORLD_GET_MAP_USER_0x1007);
			regMsg(0x1008,MSG_RES_WORLD_USER_USE_POS_ITEM_0x1008);
			regMsg(0x1009,MSG_RES_WORLD_USER_BUY_ITEM_0x1009);
			regMsg(0x100a,MSG_RES_WORLD_USER_CLEAR_UP_ITEM_0x100a);
			regMsg(0x100b,MSG_RES_WORLD_USER_SUPERPOSITION_ITEM_0x100b);
			regMsg(0x100c,MSG_RES_WORLD_USER_DROP_ITEM_0x100c);
			regMsg(0x100d,MSG_RES_WORLD_USER_UPDATE_POS_ITEM_NOTIFY_0x100d);
			regMsg(0x100e,MSG_RES_WORLD_USER_UPDATE_POS_ATTIRE_NOTIFY_0x100e);
			regMsg(0x100f,MSG_RES_WORLD_USER_UPDATE_POS_EGG_NOTIFY_0x100f);
			regMsg(0x1010,MSG_RES_WORLD_USER_UPDATE_BASE_ITEM_NOTIFY_0x1010);
			regMsg(0x1011,MSG_RES_WORLD_PET_CHANGE_NAME_0x1011);
			regMsg(0x1012,MSG_RES_WORLD_PET_SET_BTL_FIRST_0x1012);
			regMsg(0x1013,MSG_RES_WORLD_PET_SET_BTL_0x1013);
			regMsg(0x1014,MSG_RES_WORLD_PET_SET_NO_BTL_0x1014);
			regMsg(0x1015,MSG_RES_WORLD_USER_UPDATE_PET_EQUIPMENT_NOTIFY_0x1015);
			regMsg(0x1016,MSG_RES_WORLD_USER_PUT_ON_PET_EQUIPMENT_0x1016);
			regMsg(0x1017,MSG_RES_WORLD_USER_PET_STEP_UP_0x1017);
			regMsg(0x1018,MSG_RES_WORLD_PET_UPDATE_EXP_DEF_SKILL_EXP_NOTIFY_0x1018);
			regMsg(0x1019,MSG_RES_WORLD_PET_UPDATE_SKILL_EXP_BOOK_NOTIFY_0x1019);
			regMsg(0x101a,MSG_RES_WORLD_UPDATE_PET_GROW_0x101a);
			regMsg(0x101b,MSG_RES_WORLD_EGG_USE_ITEM_0x101b);
			regMsg(0x101c,MSG_RES_WORLD_GET_PET_BY_EGG_0x101c);
			regMsg(0x101d,MSG_RES_WORLD_ADD_PET_NOTIFY_0x101d);
			regMsg(0x101e,MSG_RES_WORLD_USER_PUT_OFF_PET_EQUIPMENT_0x101e);
			regMsg(0x101f,MSG_RES_WORLD_UPDATE_PET_SKILL_0x101f);
			regMsg(0x1020,MSG_RES_WORLD_UPDATE_HATCH_PET_NOTIFY_0x1020);
			regMsg(0x1021,MSG_RES_WORLD_DEL_PET_0x1021);
			regMsg(0x1022,MSG_RES_WORLD_USER_ADD_SKILL_NOTIFY_0x1022);
			regMsg(0x1023,MSG_RES_WORLD_USER_ADD_USER_SKILL_CNT_0x1023);
			regMsg(0x1024,MSG_RES_WORLD_ADD_PET_SKILL_CNT_0x1024);
			regMsg(0x1025,MSG_RES_WORLD_ADD_USER_SKILL_CNT_NOTIFY_0x1025);
			regMsg(0x1026,MSG_RES_WORLD_ADD_PET_SKILL_CNT_NOTIFY_0x1026);
			regMsg(0x1027,MSG_RES_WORLD_ADD_PET_DEF_SKILL_CNT_0x1027);
			regMsg(0x1028,MSG_RES_WORLD_ADD_PET_DEF_SKILL_CNT_NOTIFY_0x1028);
			regMsg(0x1029,MSG_RES_WORLD_TASK_ACCEPT_0x1029);
			regMsg(0x102a,MSG_RES_WORLD_TASK_FINISH_0x102a);
			regMsg(0x102b,MSG_RES_WORLD_TASK_DROP_0x102b);
			regMsg(0x102c,MSG_RES_WORLD_TASK_STEP_RATE_UPDATE_0x102c);
			regMsg(0x102d,MSG_RES_WORLD_USER_ATTIRE_OFF_NOTIFY_0x102d);
			regMsg(0x102e,MSG_RES_WORLD_USER_ATTIRE_ON_NOTIFY_0x102e);
			regMsg(0x102f,MSG_RES_WORLD_TASK_STEP_RATE_UPDATE_NOTIFY_0x102f);
			regMsg(0x102f,MSG_RES_WORLD_UPDATE_PET_CHARACTER_0x102f);
			regMsg(0x1030,MSG_RES_WORLD_TAKE_ON_USER_SKILL_0x1030);
			regMsg(0x1031,MSG_RES_WORLD_TAKE_OFF_USER_SKILL_0x1031);
			regMsg(0x1032,MSG_RES_WORLD_USER_ADD_7_ATTR_0x1032);
			regMsg(0x1300,MSG_RES_WORLD_USER_SMALL_CHAT_ALL_WORLD_0x1300);
			regMsg(0x1301,MSG_RES_WORLD_USER_BIG_CHAT_ALL_WORLD_0x1301);
			regMsg(0x1302,MSG_RES_WORLD_USER_CHAT_WORLD_0x1302);
			regMsg(0x1303,MSG_RES_WORLD_USER_CHAT_MAP_0x1303);
			regMsg(0x1304,MSG_RES_WORLD_USER_CHAT_PRIVATE_0x1304);
			regMsg(0x1305,MSG_RES_WORLD_USER_REQ_ADD_FRIEND_0x1305);
			regMsg(0x1306,MSG_RES_WORLD_USER_REQ_RM_FRIEND_0x1306);
			regMsg(0x1307,MSG_RES_WORLD_USER_REQ_ADD_BLACK_0x1307);
			regMsg(0x1308,MSG_RES_WORLD_USER_REQ_FRIEND_COMPLEX_INFO_0x1308);
			regMsg(0x1309,MSG_RES_WORLD_USER_ADD_FRIEND_OFFLINE_MSG_0x1309);
			regMsg(0x130a,MSG_RES_WORLD_NOTIFY_FRIEND_SIMPLE_INFO_0x130a);
			regMsg(0x130b,MSG_RES_WORLD_NOTIFY_ADD_MSG_0x130b);
			regMsg(0x130c,MSG_RES_WORLD_USER_REQ_FRIEND_SIMPLE_INFO_0x130c);
			regMsg(0x130d,MSG_RES_WORLD_USER_FRIEND_OFFLINE_0x130d);
			regMsg(0x130e,MSG_RES_WORLD_USER_FIND_ROLE_NICK_0x130e);
			regMsg(0x130f,MSG_RES_WORLD_USER_REQ_ZHUFU_0x130f);
			regMsg(0x1310,MSG_RES_WORLD_NOTIFY_RECV_ZHUFU_MSGS_0x1310);
			regMsg(0x1311,MSG_RES_SWITCH_REQ_ZHUFU_0x1311);
			regMsg(0x1312,MSG_RES_WORLD_USER_REQ_RM_MSGS_0x1312);
			regMsg(0x1313,MSG_RES_SWITCH_NOTIFY_SEND_ZHUFU_0x1313);
			regMsg(0x1314,MSG_RES_WORLD_USER_REQ_RM_BLACK_0x1314);
			regMsg(0x1316,MSG_RES_WORLD_USER_REQ_RM_MAILS_0x1316);
			regMsg(0x1317,MSG_RES_WORLD_USER_REQ_OPEN_MAIL_0x1317);
			regMsg(0x1318,MSG_RES_WORLD_USER_REQ_FETCH_ATTACHMENT_0x1318);
			regMsg(0x1319,MSG_RES_WORLD_NOTIFY_ADD_MAIL_0x1319);
			regMsg(0x131a,MSG_RES_WORLD_NOTIFY_ADD_EVENTS_0x131a);
			regMsg(0x131b,MSG_RES_WORLD_USER_REQ_ADD_MSG_0x131b);
			regMsg(0x1320,MSG_RES_WORLD_USER_REQ_OTHER_USER_INFO_0x1320);
			regMsg(0x1400,MSG_RES_WORLD_USER_PVE_0x1400);
			regMsg(0x1401,MSG_RES_WORLD_USER_BTL_SERVER_CRASH_NOTIFY_0x1401);
			regMsg(0x1402,MSG_RES_WORLD_USER_BTL_END_NOTIFY_0x1402);
			
		}
		
		private function regMsg(mid:uint,MSG:Class):void
		{
			mMsgDic[mid] = MSG;
		}
		
		public function getMSG(mid:uint):Class
		{
			return mMsgDic[mid] as Class;
		}
		
		public function setMsgUID(v:uint):void
		{
			MsgBase.UID = v;
		}
		
		public function dispose():void
		{
			mMsgDic = null;
		}
	}
}