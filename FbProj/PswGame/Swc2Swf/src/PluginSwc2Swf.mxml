<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" width="444" height="156" initialize="init()">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			import nochump.util.zip.ZipEntry;
			import nochump.util.zip.ZipFile;
			
			import spark.components.CheckBox;
			import spark.components.RadioButton;
//			private var sourceFile:File;
			private var projects:XMLList;
			private var uncompressQueue:XMLList;
			private var checkBoxes:Vector.<CheckBox>;
			
			private function init():void
			{
				var urlLoader:URLLoader = new URLLoader();
				urlLoader.addEventListener(Event.COMPLETE,onConfigLoaded);
				urlLoader.load(new URLRequest(File.applicationDirectory.url+"config/projects.xml"));
			}
			
			private var lastBtnLeft:Number = 40;
			private function onConfigLoaded(e:Event):void
			{
				projects = XML(e.target.data).project;
				checkBoxes = new Vector.<CheckBox>();
				for(var i:int=0;i<projects.length();++i)
				{
					var project:XML = projects[i];
					var box:CheckBox = new CheckBox();
					box.label = project.@name;
					var row:uint = Math.floor(i / 2);
					var collum:uint = i % 2;
					box.y = 20 + row * 30;
					box.x = 50 + collum * 200;
//					lastBtnLeft += box.label.length*6;
					checkBoxes.push(box);
					addElement(box);
				}
			}
			
			private function decompress(project:XML):void
			{
				var sourceFile:File = new File(project.@binPath);
				souceFiles.push(sourceFile);
				function onFileLoaded(e:Event):void
				{
					var zipFile:ZipFile = new ZipFile(e.target.data);
					var zipEntry:ZipEntry = zipFile.getEntry("library.swf");
					var targetFile:File = new File(project.@output);
					var fs:FileStream = new FileStream();
					fs.open(targetFile,FileMode.WRITE);
					var bytes:ByteArray = zipFile.getInput(zipEntry);
					fs.writeBytes(bytes,0,bytes.length);
					fs.close();
					var index:int = souceFiles.indexOf(sourceFile);
					souceFiles.splice(index,1);
					if(souceFiles.length<=0)
						Alert.show("Ok","Ok",4,null,function ():void {exit()});
				}
				sourceFile.addEventListener(Event.COMPLETE,onFileLoaded);
				sourceFile.load();
			}

			private function uncompressAll():void
			{
				uncompressQueue = projects;
				souceFiles = new <File>[];
				for each(var item:XML in uncompressQueue)
				{
					decompress(item);
				}
			}
			
			private var souceFiles:Vector.<File>;
			private function uncompressSelected():void
			{
				uncompressQueue = new XMLList();
				for(var i:int=0;i<checkBoxes.length;++i)
				{
					if(!checkBoxes[i].selected) continue;
					var project:XML=projects.(@name == checkBoxes[i].label)[0];
					uncompressQueue[uncompressQueue.length()]=project;
				}
				souceFiles = new <File>[];
				for each(var item:XML in uncompressQueue)
				{
					decompress(item);
				}
			}
			
		]]>
	</fx:Script>
	<s:Button x="331" y="98" label="All" click="uncompressAll()"/>
	<s:Button x="125" y="98" label="Close" click="exit()"/>
	<s:Button x="228" y="98" label="Selected" click="uncompressSelected()"/>
</s:WindowedApplication>