<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="477" height="182" initialize="init()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.lipi.excel.Excel;
			
			import file.IClientFile;
			import file.MapFile;
			import file.MonsterFile;
			
			import flash.utils.getDefinitionByName;
			
			import mx.controls.Alert;
			
			import spark.components.CheckBox;
			private var cfgXML:XML;
			private var projectsSelected:XML;
			
			private function init():void
			{
				var urlLoader:URLLoader = new URLLoader();
				urlLoader.addEventListener(Event.COMPLETE,onConfigLoaded);
				urlLoader.load(new URLRequest("config/projects.xml"));
				projectsSelected = <projects/>;
				MapFile;
				MonsterFile;
			}
			
			private function onConfigLoaded(e:Event):void
			{
				e.target.removeEventListener(Event.COMPLETE,onConfigLoaded);
				cfgXML = XML(e.target.data);
				var i:uint=0;
				const intervalX:uint = 70;
				const intervalY:uint = 40;
				const offsetX:uint = 40;
				const offsetY:uint = 20;
				const numPerRow:uint = 6;
				for each( var project:XML in cfgXML.project)
				{
					var cBox:CheckBox = new CheckBox();
					cBox.label = project.@name; 
					addElement(cBox);
					cBox.x = offsetX+i%numPerRow * intervalX;
					cBox.y = offsetY+Math.floor(i/numPerRow) * intervalY;
					cBox.addEventListener(MouseEvent.CLICK,onProjectSelected);
					i++;
				}
				
			}
			
			private function onProjectSelected(e:Event):void
			{
				var cBox:CheckBox = e.target as CheckBox;
				if(cBox.selected)
				{
					var project:XML = cfgXML.project.(@name == cBox.label)[0] as XML;
					projectsSelected.appendChild(project);
				}
				else
				{
					delete projectsSelected.project.(@name == cBox.label)[0];
				}
			}
			
			private function onSelectClick():void
			{
				readFile();
			}
			
			private function onAllClick():void
			{
				projectsSelected = cfgXML;
				readFile();
			}
			
			private function readFile():void
			{
				for each(var project:XML in projectsSelected.project)
				{
					var f:File = new File(project.@xlsPath);
					var fs:FileStream = new FileStream();
					fs.open(f,FileMode.READ);
					var fileData:ByteArray = new ByteArray();
					fs.readBytes(fileData);
					
					var excel:Excel = new Excel(fileData);
					var sheet:Array = excel.getSheetArray();
					trace(project.@fileClass)
					var FileClass:Class = getDefinitionByName(project.@fileClass) as Class;
					var $file:IClientFile = new FileClass(project.@asPath) as IClientFile;
					$file.readExcel(sheet);
					$file.write();
				}
				Alert.show("ok","ok",4,null,function ():void { exit(); });
			}
			
		]]>
	</fx:Script>
	<s:Button x="382" y="127" label="All" click="onAllClick()"/>
	<s:Button x="289" y="127" label="Select" click="onSelectClick()"/>
</s:WindowedApplication>
