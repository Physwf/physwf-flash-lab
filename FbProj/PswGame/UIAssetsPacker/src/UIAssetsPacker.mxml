<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" initialize="init()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import algorithm.objects.Configuration;
			import algorithm.objects.Line;
			
			import flash.utils.setTimeout;
			
			import struct.ItemStruct;
			private const numRects:int = 10;
			private const minW:uint = 10;
			private const minH:uint = 10;
			private const interval:uint = 100;
			
			private var rects:Vector.<BitmapData>;
			private var items:Vector.<ItemStruct>;
			
			private var configuration:Configuration;
			private var conW:uint;
			private var conH:uint;
			private var area:uint;
			
			private function init():void
			{
				randomizeRects();
				//初始化格局
				configuration = new Configuration();
				configuration.addAngle(new Point());
				conW = conH = Math.sqrt(area);
				configuration.addBoarder(new Line(0,conH,conW));
				items = new Vector.<ItemStruct>();
				pack();
			}
			
			private function randomizeRects():void
			{
				rects = new Vector.<BitmapData>();
				for(var i:int=0;i<numRects;++i)
				{
					var randH:Number = Math.random() * interval;
					var rect:BitmapData = new BitmapData( minW + randH+Math.random() * interval,
														minH + randH,false,
														0xFFFFFFFF * Math.random());
					rects.push(rect);
					area += rect.rect.width * rect.rect.height;
				}
			}
			
			private function pack():void
			{
				while(rects.length > 0)
				{
					configuration.sort();
					var curAngle:Point = configuration.popAngle();
					if(curAngle == null) 
					{
						break;
					}
					for(var i:int=0;i<rects.length;++i)
					{
						var r:Rectangle = new Rectangle();
						r.x= curAngle.x;
						r.y= curAngle.y;
						r.width = rects[i].width;
						r.height = rects[i].height;
						var line:Line = configuration.getNearestBoarder(r);
						if(line == null)
						{
							continue;
						}
						else
						{
							var item:ItemStruct = new ItemStruct(curAngle,rects[i]);
							items.push(item);
							configuration.addAngle(new Point(item.position.x+item.obj.width,item.position.y));
							configuration.addAngle(new Point(item.position.x,item.position.y+item.obj.height));
							configuration.addBoarder(new Line(item.position.y,item.position.y+item.obj.height,item.position.x));
							rects.splice(i,1);
						}
					}
				}
				
				trace("开始拼图！");
				
				var canvas:BitmapData = new BitmapData(conW,conH,true,0);
				
				for(i=0;i<items.length;++i)
				{
					canvas.copyPixels(items[i].obj,items[i].obj.rect,items[i].position);
					trace(items[i].position)
				}
				
				setTimeout(
					function():void 
					{
						stage.addChild(new Bitmap(canvas))
						trace("看看呢");
					},3000);
			}
			
			private function sortConfiguration():void
			{
				
			}
			
		]]>
	</fx:Script>
</s:WindowedApplication>
