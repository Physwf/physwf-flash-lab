<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="375" height="136" initialize="init()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import algorithm.Greedy;
			import algorithm.objects.Angle;
			import algorithm.objects.Configuration;
			import algorithm.objects.Line;
			
			import reader.IReader;
			import reader.ImageReader;
			import reader.SWFReader;
			
			import spark.components.Image;
			
			import struct.ItemStruct;
			
			import writer.SpriteWriter;
			private const numRects:int = 20;
			private const minW:uint = 30;
			private const minH:uint = 30;
			private const interval:uint = 100;
			
			private var images:Vector.<BitmapData>;
			private var items:Vector.<ItemStruct>;
			
			private var configuration:Configuration;
			private var area:uint;
			
			private var _reader:IReader;
			
			private function init():void
			{
				btnOpenSwfFile.addEventListener(MouseEvent.CLICK,onSelectSWFFile);
				btnOpenSwfDir.addEventListener(MouseEvent.CLICK,onSwfDirSelected);
				btnOpenImageDir.addEventListener(MouseEvent.CLICK,onImageDirSelected);
			}
			
			private var file:File;
			private function onSelectSWFFile(e:Event):void
			{
				_reader = new SWFReader();
				file = new File();
				file.addEventListener(Event.SELECT,function(e:Event):void
				{
					_reader.readFile(file.url);
					_reader.addEventListener(Event.COMPLETE,onReaderReady);
				});
				file.browse([new FileFilter("Flash Movie","*.swf")]);
			}
			
			private function onSwfDirSelected(e:Event):void
			{
				_reader = new SWFReader();
				file = new File();
				file.addEventListener(FileListEvent.SELECT_MULTIPLE,function(e:Event):void
				{
					var paths:Vector.<File> = Vector.<File>(file.getDirectoryListing())
					_reader.readDir(paths);
					_reader.addEventListener(Event.COMPLETE,onReaderReady);
				});
				file.browseForOpenMultiple("选择",[new FileFilter("Flash Movie","*.swf")]);
			}
			
			
			private function onImageDirSelected(e:Event):void
			{
				_reader = new ImageReader();
				file = new File();
				file.addEventListener(Event.SELECT,function(e:Event):void
				{
					var paths:Vector.<File> = Vector.<File>(file.getDirectoryListing())
					_reader.readDir(paths);
					_reader.addEventListener(Event.COMPLETE,onReaderReady);
				});
//				file.browseForOpenMultiple("选择",[new FileFilter("Image","*.png;*.tga;*.jpg;*.jpeg")]);
				file.browseForDirectory("选择");
			}
			
			private function onReaderReady(e:Event):void
			{
//				randomizeRects();
				images = _reader.data;
				//初始化格局
				configuration = new Configuration();
				configuration.addAgl(new Angle(new Point,0));
				configuration.addBoarder(new Line(0,configuration.conH,configuration.conW,new Point()));
				items = new Vector.<ItemStruct>();
				var gready:Greedy = new Greedy(configuration);
				gready.addEventListener("done",onDone);
				gready.pack(images,items);
			}
			
			private function onDone(e:Event):void
			{
				var sWriter:SpriteWriter = new SpriteWriter();
				sWriter.write(items,configuration.conW,configuration.conH);
			}
			
			private function randomizeRects():void
			{
				images = new Vector.<BitmapData>();
				for(var i:int=0;i<numRects;++i)
				{
					var randH:Number = Math.random() * interval;
					var rect:BitmapData = new BitmapData( minW + randH+Math.random() * interval,
														minH + randH,true,
														0x6F000000 + 0xFFFFFF * Math.random());
					images.push(rect);
					area += rect.rect.width * rect.rect.height;
				}
			}
			
			private function pack2():void
			{
				var seq:uint=0;
				while(images.length > 0)
				{
					configuration.sortAgl();
					var curAngle:Angle = configuration.shiftAgl();
					if(curAngle == null) 
					{
						break;
					}
					
					var boarder:Line = configuration.getNearestBoarder(curAngle.pos);
					var minDist:Number = Number.MAX_VALUE;
					
					if(boarder)
					{
						var tempImage:BitmapData = null;
						for(var i:int=0;i<images.length;++i)
						{
							var r:Rectangle = new Rectangle();
							r.x= curAngle.pos.x;
							r.y= curAngle.pos.y;
							r.width = images[i].width;
							r.height = images[i].height;
							
							
							if(r.right<=boarder.pos)
							{
								var dist:Number = boarder.pos - r.right;
								if(minDist>dist)
								{
									tempImage = images[i];
									minDist = dist;
								}
							}
						}
						
						if(tempImage)
						{
							var item:ItemStruct = new ItemStruct(curAngle.pos,tempImage);
							configuration.addHoldedAgl(curAngle);
							var txt:TextField = new TextField();
							txt.text = ""+seq++;
							var b:BitmapData = new BitmapData(txt.width,txt.height,true,0);
							b.draw(txt);
							tempImage.copyPixels(b,b.rect,new Point(),null,null,true);
							items.push(item);
							
//							configuration.addAngle(new Point(item.position.x+item.obj.width,item.position.y));
							configuration.addAgl(new Angle(new Point(item.position.x+item.obj.width,item.position.y),item.obj.height));
							var a:Point = new Point(item.position.x,item.position.y+item.obj.height);
//							configuration.addAngle(a);
							configuration.addAgl(new Angle(new Point(item.position.x,item.position.y+item.obj.height),item.obj.height));
							configuration.addBoarder(new Line(item.position.y,item.position.y+item.obj.height,item.position.x,null));
							var index:int = images.indexOf(tempImage);
							images.splice(index,1);
						}
					}
				}
				
				trace("开始拼图！");
				
				var canvas:BitmapData = new BitmapData(configuration.conW,configuration.conH,true,0x3F000000);
				
				var id:uint = setInterval(function ():void
				{
					canvas.copyPixels(items[0].obj,items[0].obj.rect,items[0].position,null,null,true);
					items.splice(0,1);
					if(items.length==0)
					{
						clearInterval(id);
					}
				},2000);
				//				for(i=0;i<items.length;++i)
				//				{
				//					canvas.copyPixels(items[i].obj,items[i].obj.rect,items[i].position,null,null,true);
				//					trace(items[i].position)
				//				}
				var windowOptions:NativeWindowInitOptions = new NativeWindowInitOptions();
				windowOptions.maximizable = false;
				windowOptions.systemChrome = NativeWindowSystemChrome.ALTERNATE;
				windowOptions.type = NativeWindowType.NORMAL;
				var window:NativeWindow = new NativeWindow(windowOptions);
				window.width = configuration.conW;
				window.height = configuration.conW;
				var image:Image = new Image();
//				image.source = 
				window.stage.align = StageAlign.TOP_LEFT;
				window.stage.scaleMode = StageScaleMode.NO_SCALE;
				window.stage.addChild(new Bitmap(canvas));
				window.activate();
				window.x = 400;
			}
			
		]]>
	</fx:Script>
	<s:Button x="28" y="47" label="打开SWF文件" id="btnOpenSwfFile"/>
	<s:Button x="142" y="47" label="打开SWF目录" id="btnOpenSwfDir"/>
	<s:Button x="255" y="48" width="95" label="打开图片目录" id="btnOpenImageDir"/>
</s:WindowedApplication>
